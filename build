#!/usr/bin/env bash

declare -F build &>/dev/null || {
  declare -gxr WORKDIR_LOCAL="$( realpath -- "${BASH_SOURCE[0]%/*}" )"
  declare -gxr WORKDIR_BUILD="$WORKDIR_LOCAL/tmp/latest" \
              WORKDIR_TEST="$WORKDIR_LOCAL/test" \
              WORKDIR_SRC="$WORKDIR_LOCAL/src" \
              WORKDIR_LIB="$WORKDIR_LOCAL/lib"
  
  build(){
    local file name dist hash date=$( date +"%Y-%m-%d" ) head body

    for file in "$WORKDIR_SRC"/*; do
      [ -f "$file" ] || continue
      [[ "$file" == *" copy"* ]] || [[ "$file" == *.tmp ]] && continue
      
      name="${file##*/}"
      dist="$WORKDIR_LIB/${name:0:-3}"
      read -r hash _ < <( sha256sum "$file" )
      head=""

      case "$name" in
        *.sh)
          if [ ! -f "$dist" ] || ! grep -q "$hash" "$dist"; then
            name="${name:0:-3}"
            body="$(<"$file")"
            body="${body#"${body%%[!$'\n']*}"}" # remove leading blank lines
            head="$(printf '%s\n' "$body" | awk '/^#/ { print; next } /^$/ { print; next } { exit }')"
            if [ "$head" ]; then
              body="$(printf '%s' "$body" | awk 'NF && $0 !~ /^[[:space:]]*#/ {f=1} f')"
              head=$'\n'"$head"
            fi

            # doc-block
            cat <<-EOF > "$dist"
							#!/usr/bin/env bash
							
							##
							# $name function${head}
							# @version ($date)
							# @checksum ${hash}
							##
						EOF

            echo -e "declare -F $name &>/dev/null || {" >> "$dist"
            printf '%s\n' "$body" | sed 's/^/    /' >> "$dist"
            echo -e "}\n" >> "$dist"
            echo -e "[ \"\${BASH_SOURCE[0]}\" = \"\$0\" ] && $name \"\$@\"" >> "$dist" # Execute only if not sourced
          fi
          ;;
        *.js)
          node "$file"
          ;;
      esac
    done
  }
}

build "$@"
