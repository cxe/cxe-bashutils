#!/usr/bin/env bash

declare -gxr WORKDIR_LOCAL="$( realpath -- "${BASH_SOURCE[0]%/*}" )"
declare -gxr WORKDIR_BUILD="$WORKDIR_LOCAL/tmp/latest" \
             WORKDIR_TEST="$WORKDIR_LOCAL/test" \
             WORKDIR_SRC="$WORKDIR_LOCAL/src" \
             WORKDIR_LIB="$WORKDIR_LOCAL/lib"

build(){
  local file name dist hash date=$( date +"%Y-%m-%d" )

  for file in "$WORKDIR_SRC"/*; do
    [ -f "$file" ] || continue
    [[ "$file" == *" copy"* ]] || [[ "$file" == *.tmp ]] && continue
    
    name="${file##*/}"
    dist="$WORKDIR_LIB/${name:0:-3}"
    read -r hash _ < <( sha256sum "$file" )
    case "$name" in
      *.sh)
        if ! grep -q "$hash" "$dist"; then
          name="${name:0:-3}"
          echo -e "#!/usr/bin/env bash\n" > "$dist"
          echo -e "##" >> "$dist"
          echo -e "# $name function ($hash)" >> "$dist"
          echo -e "# @version ($date)" >> "$dist"
          echo -e "##" >> "$dist"
          echo -e "declare -F $name &>/dev/null || {\n  $name(){" >> "$dist"
          sed 's/^/    /' "$file" >> "$dist"
          echo -e "  }\n}\n" >> "$dist"
          echo -e "[[ \"\${BASH_SOURCE[0]}\" == \"\$0\" ]] && $name \"\$@\"" >> "$dist" # Execute only if not sourced
        fi
        ;;
      *.js)
        node "$file"
        ;;
    esac
  done
}

build "$@"
